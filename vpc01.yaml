AWSTemplateFormatVersion: '2010-09-09'
Resources:
  BABAVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: BABAVPC
  publicnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: BABAVPC
      CidrBlock: 192.168.10.0/24
      AvailabilityZone: "us-east-1a"
      Tags:
      - Key: Env
        Value: Test
  privatenet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: BABAVPC
      CidrBlock: 192.168.11.0/24
      AvailabilityZone: "us-east-1b"
      Tags:
      - Key: Env
        Value: Test
  BABAInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: Env
        Value: Test
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: BABAVPC
      InternetGatewayId:
        Ref: BABAInternetGateway
  BABApubrouter:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: BABAVPC
      Tags:
      - Key: Env
        Value: test
  BABAprivrouter:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: BABAVPC
      Tags:
      - Key: Env
        Value: test
  attachtopubrouter:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: publicnet01
      RouteTableId:
        Ref: BABApubrouter
  attachtoprivrouter:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: privatenet01
      RouteTableId:
        Ref: BABAprivrouter
  pubigwroute:
    Type: AWS::EC2::Route
    DependsOn: BABAInternetGateway
    Properties:
      RouteTableId:
        Ref: BABApubrouter
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: BABAInternetGateway
  WebsecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId:
        Ref: BABAVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: WebsecurityGroup
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-97785bed
      KeyName: pranee-key
      InstanceType: t2.micro
      SubnetId: !Ref publicnet01
      SecurityGroupIds:
        - !GetAtt WebsecurityGroup.GroupId
      Tags:
      - Key: Name
        Value: CFDemoEC2
